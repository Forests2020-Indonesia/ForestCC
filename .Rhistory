library(dplyr)
library(magrittr)
rm(list=ls())
pixqa <- list(
clr = c(322, 386, 834, 898, 1346),
wtr = c(324, 388, 836, 900, 1348),
cld_shadow = c(328, 392, 840, 904, 1350),
snw_ice = c(336, 368, 400, 432, 848, 880, 912, 944, 1352),
cld = c(352, 368, 416,432, 480, 864, 880, 928, 944, 992),
low_cfd_cloud = c(322, 324, 328, 336, 352, 368, 834, 836, 840, 848, 864, 880),
med_cfd_cloud = c(386, 388, 392, 400, 416, 432, 898, 900, 904, 928, 944),
hgh_cfd_cloud = c(480, 992),
low_cfd_cirrus = c(322, 324, 328, 336, 352, 368, 386, 388, 392, 400, 416, 432, 480),
hgh_cfd_cirrus = c(834, 836, 840, 848, 864, 880,898,900, 904, 912, 928, 944, 992),
ter_ocl = c(1346, 1348, 1350, 1352))
sel_metrics <- st_read("PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp")
sel_metrics %$% table(LC_Lidar)
sel_metrics %>% filter(LC_Lidar == "Hutan Rawa Sekunder Jarang")
names(sel_metrics)
sel_metrics %>% filter(LC_Lidar == "Hutan Rawa Sekunder Jarang") %>% selec(tileID)
sel_metrics %>% filter(LC_Lidar == "Hutan Rawa Sekunder Jarang") %>% select(tileID)
names(sel_metrics)
dirlidrlc <- "/DATA/LIDAR GIZ/ORTHOPHOTO_CLASSIFICATION/"
shpmetrics <- list_files(folder=dirlidrlc, "*.shp")
list_files = function(folder, search_text)
{
files = list.files(dirlidrlc, pattern=glob2rs(search_text),
fullnames=TRUE)
return(files)
}
shpmetrics <- list_files(folder=dirlidrlc, "*.shp")
list_files = function(folder, search_text)
{
files = list.files(dirlidrlc, pattern=glob2rs(search_text),
full.names=TRUE)
return(files)
}
shpmetrics <- list_files(folder=dirlidrlc, "*.shp")
list_files = function(folder, search_text)
{
files = list.files(dirlidrlc, pattern=glob2rx(search_text),
full.names=TRUE)
return(files)
}
shpmetrics <- list_files(folder=dirlidrlc, "*.shp")
shpmetrics
rm(shpmetrics)
shp_lc <- list_files(folder=dirlidrlc, "*.shp")
rm(shp_lc)
list_shp <- list_files(folder=dirlidrlc, "*.shp")
shp_lcs <- lapply(list_shp, FUN = function(x) read_sf(x))
shp_lcs <- do.call(rbind, shp_lcs)
shp_lcs <- lapply(list_shp, FUN = function(x) print(names(x))
)
shp_lcs <- lapply(list_shp, FUN = function(x) read_sf(x))
lapply(shp_lcs, FUN=function(x) names(x))
?rename
shp_lcs <- lapply(list_shp,
FUN = function(x) {
read_sf(x)
dplyr::rename(x, LC_ldr2 = Tuplah )
x <- dplyr::select(x, "LC_ldr2")
}
)
shp_lcs <- lapply(list_shp,
FUN = function(x) {
read_sf(x) %>%
dplyr::rename(x, LC_ldr2 = Tuplah)%>%
dplyr::select(x, "LC_ldr2") %>% return
}
)
shp_lcs <- lapply(list_shp,
FUN = function(x) {
read_sf(x) %>%
dplyr::rename(LC_ldr2 = Tuplah)%>%
dplyr::select("LC_ldr2") %>% return
}
)
shp_lcs
lapply(shp_lcs, FUN=function(x) names(x)) # jumlah atribut tidak sama
shp_lcs <- do.call(rbind, shp_lcs)
ls()
names(sel_metrics)
sel_metrics <- read_sf("PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp")
names(sel_metrics)
names(shp_lcs)
sel_metrics <- st_join(sel_metrics, shp_lcs)
names(sel_metrics)
?st_write
?write_sf
st_write(sel_metrics, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp",
overwrite=TRUE)
write_sf(sel_metrics, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp",
overwrite=TRUE)
write_sf(sel_metrics, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp",
delete_layer =TRUE)
sel_metrics %>% table(LC_ldr2)
names(sel_metric)
names(sel_metrics)
sel_metrics %$% table(LC_ldr2)
sel_metrics %>% select(LC_ldr2 == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>% select(.,LC_ldr2 == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>% dplyr::select(LC_ldr2 == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>% dplyr::select(LC_lidar == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>% dplyr::select(.,LC_lidar == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>% dplyr::select(LC_Lidar == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>% dplyr::select(.,LC_Lidar == 'Hutan Rawa Sekunder Jarang')
dplyr::select(sel_metrics, LC_Lidar == 'Hutan Rawa Sekunder Jarang')
dplyr::filter(sel_metrics, LC_Lidar == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>%
filter(LC_Lidar == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>%
filter(LC_ldr2 == 'Hutan Rawa Sekunder Jarang')
sel_metrics %>%
filter(LC_ldr2 == 'Hutan Rawa Sekunder Jarang') %>%
select(LC_Lidar, LC_ldr2)
sel_metrics %<>% select(-LC_ldr2)
names(sel_metrics)
list_shp <- list_files(folder=dirlidrlc, "*.shp")
shp_lcs <- lapply(list_shp,
FUN = function(x) {
read_sf(x) %>%
dplyr::rename(LC_ldr2 = Tuplah)%>%
dplyr::select("LC_ldr2") %>% return
}
)
lapply(shp_lcs, FUN=function(x) names(x)) # jumlah atribut ok
lapply(list_shp,
FUN = function(x) {
read_sf(x) %>%
names
}
)
lapply(list_shp, FUN = function(x) { read_sf(x) %>% names })
shp_lcs <- lapply(list_shp,
FUN = function(x) {
read_sf(x) %>%
dplyr::rename(LClidar2 = LC_Lidar)%>%
dplyr::select("LClidar2") %>% return
}
)
lapply(shp_lcs, FUN=function(x) names(x)) # jumlah atribut ok
shp_lcs <- do.call(rbind, shp_lcs) # combine
sel_metrics <- read_sf("PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp")
sel_metrics <- st_join(sel_metrics, shp_lcs)
names(sel_metrics)
sel_metrics %<>% select(-LC_ldr2)
names(sel_metrics)
write_sf(sel_metrics, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp",
delete_layer =TRUE)
sel_metrics %$% table(LClidar2)
sel_metrics %>%
filter(LC_ldr2 == 'Hutan Rawa Sekunder') %>%
select(LC_Lidar, LC_ldr2)
sel_metrics %>%
filter(LC_ldr2 == 'Hutan Rawa Sekunder') %>%
select(LC_Lidar, LClidar2)
sel_metrics %>%
filter(LClidar2 == 'Hutan Rawa Sekunder') %>%
select(LC_Lidar, LClidar2)
sel_metrics %$% table(LClidar2)
sel_metrics %>%
filter(LClidar2 == 'Mangrove')
sel_metrics %>%
filter(LClidar2 == 'Mangrove') %>% unique(tileID)
sel_metrics %>%
filter(LClidar2 == 'Mangrove') %>% unique(.$tileID)
sel_metrics %>%
filter(LClidar2 == 'Mangrove') %$% unique(tileID)
sel_metrics %>%
filter(LClidar2 == 'Hutan Mangrove Primer') %$% unique(tileID)
sel_metrics %$% table(LClidar2)
#ubah nilai atribut = Mangrove menjadi hutn mangrove primer
sel_metrics %>% filter(LCLidar2 == "Mangrove")
#ubah nilai atribut = Mangrove menjadi hutn mangrove primer
sel_metrics %>% filter(LClidar2 == "Mangrove")
sel_metrics[LClidar2 == 'Mangrove']
sel_metrics[sel_metrics$LClidar2 == 'Mangrove']
sel_metrics[sel_metrics$LClidar2 == 'Mangrove',]
?replace
?replace
?if_else
sel_metrics %>%
mutate(LClidar2 = if_else(LClidar2 == "Mangrove",
"Hutan Mangrove", LClidar2))
#ubah nilai atribut = Mangrove menjadi hutn mangrove primer
sel_metrics %>% filter(LClidar2 == "Mangrove")
sel_metrics %<>%
mutate(LClidar2 = if_else(LClidar2 == "Mangrove",
"Hutan Mangrove", LClidar2))
#ubah nilai atribut = Mangrove menjadi hutn mangrove primer
sel_metrics %>% filter(LClidar2 == "Mangrove")
sel_metrics %$% table(LClidar2)
sel_metrics %<>%
mutate(LClidar2 = if_else(LClidar2 == "Hutan Mangrove",
"Hutan Mangrove Primer", LClidar2))
sel_metrics %$% table(LClidar2)
sel_metrics %$% table(LClidar2)
sel_metrics %$% table(LClidar2)
write_sf(sel_metrics, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics.shp",
delete_layer =TRUE)
sel_metrics %>%
filter(LClidar2 == 'Hutan Mangrove Primer') %$% unique(tileID)
pixqa
pixqa <- list(
clr = c(322, 386, 834, 898, 1346),
wtr = c(324, 388, 836, 900, 1348),
cld_shadow = c(328, 392, 840, 904, 1350),
snw_ice = c(336, 368, 400, 432, 848, 880, 912, 944, 1352),
cld = c(352, 368, 416,432, 480, 864, 880, 928, 944, 992),
low_cfd_cloud = c(322, 324, 328, 336, 352, 368, 834, 836, 840, 848, 864, 880),
med_cfd_cloud = c(386, 388, 392, 400, 416, 432, 898, 900, 904, 928, 944),
hgh_cfd_cloud = c(480, 992),
low_cfd_cirrus = c(322, 324, 328, 336, 352, 368, 386, 388, 392, 400, 416, 432, 480),
hgh_cfd_cirrus = c(834, 836, 840, 848, 864, 880,898,900, 904, 912, 928, 944, 992),
terrain_ocl = c(1346, 1348, 1350, 1352))
pixqa <- list(
clear = c(322, 386, 834, 898, 1346),
water = c(324, 388, 836, 900, 1348),
cloud_shadow = c(328, 392, 840, 904, 1350),
snow_ice = c(336, 368, 400, 432, 848, 880, 912, 944, 1352),
cloud = c(352, 368, 416,432, 480, 864, 880, 928, 944, 992),
low_cfd_cloud = c(322, 324, 328, 336, 352, 368, 834, 836, 840, 848, 864, 880),
med_cfd_cloud = c(386, 388, 392, 400, 416, 432, 898, 900, 904, 928, 944),
hgh_cfd_cloud = c(480, 992),
low_cfd_cirrus = c(322, 324, 328, 336, 352, 368, 386, 388, 392, 400, 416, 432, 480),
hgh_cfd_cirrus = c(834, 836, 840, 848, 864, 880,898,900, 904, 912, 928, 944, 992),
terrain_oclusn = c(1346, 1348, 1350, 1352))
pixqa['terrain_oclusn']
pixqa[['terrain_oclusn']]
names(sel_metrics)
sel_metrics %>% filter(!((bQ %in% pixqa[["cloud_shadow"]])))
nrow(sel_metrics)
sel_metrics %>% filter(!((bQ %in% pixqa[["cloud_shadow"]]))) %>% nrow
sel_metrics %>% filter(!((bQ %in% pixqa[["cloud_shadow"]]) |
(bQ %in% pixqa[["cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cirrus"]]))) %>% nrow
fin_metrics <- sel_metrics %>%
filter(!((bQ %in% pixqa[["cloud_shadow"]]) |
(bQ %in% pixqa[["cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cirrus"]]))) %>% nrow
rm(fin_metrics)
sel_metrics2 <- sel_metrics %>%
filter(!((bQ %in% pixqa[["cloud_shadow"]]) |
(bQ %in% pixqa[["cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cirrus"]]))) %>% nrow
write_sf(sel_metrics2, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics2.shp")
sel_metrics2 <- sel_metrics %>%
filter(!((bQ %in% pixqa[["cloud_shadow"]]) |
(bQ %in% pixqa[["cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cloud"]]) |
(bQ %in% pixqa[["hgh_cfd_cirrus"]])))
write_sf(sel_metrics2, "PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics2.shp")
sel_metrics %$% table(LClidar2)
names(sel_metrics)
layer_names <- c(
"ITY" = "Intensity",
"PL__2015" = "MoEF's 2015 Landcover", "PL__2016" = "MoEF's 2016 Landcover",
"b2" = "Band 2", "b3" = "Band 3", "b4" = "Band 4",
"b5" = "Band 5", "b6" = "Band 6", "b7" = "Band 7", "bQ" = "Band Q/A",
"NBR"= "Normalized Burnt Ratio",
"NDSI" = "Normalized Difference Soil Index",
"NDVI" = "Normalized Difference Vegetation Index",
"NDWI" = "Normalized Difference Water Index",
"SATVI"= "Soil Adjusted Total Vegetation Index",
"Tb4M" = "GLCM-Mean B4", "Tb4V" = "GLCM-Variance B4",
"Tb5M" = "GLCM-Mean B5", "Tb5V" = "GLCM-Variance B5",
"Tb6M" = "GLCM-Mean B6", "Tb6V" = "GLCM-Variance B6",
"Tb7M" = "GLCM-Mean B7", "Tb7V" = "GLCM-Variance B7",
"TCA"  = "TC Angle", "TCD" = "TC Distance", "TCB"  = "TC Brightness",
"TCG" = "TC Greeness", "TCW" = "TC Wetness",
LCLidar2 = "Lidar's Landcover"
)
layer_names
library(reshape2)
# Band subset
bands <- sel_metrics2 %>%
select(FRCI, b2, b3, b4, b5, b6, b7, LClidar2) %>%
melt(id.vars = "FRCI")
sel_metrics2 %>%
select(FRCI, b2, b3, b4, b5, b6, b7, LClidar2)
# Band subset
bands <- sel_metrics2 %>%
select(FRCI, b2, b3, b4, b5, b6, b7, LClidar2) %>%
st_drop_geometry %>%
melt(id.vars = "FRCI")
bands
head(bands)
melt(id.vars = c("FRCI", "LClidar2")
)
# Band subset
bands <- sel_metrics2 %>%
select(FRCI, b2, b3, b4, b5, b6, b7, LClidar2) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
bands
unique(bands$LClidar2)
sel_metrics2 %>%
filter(LClidar2 %in% c("Hutan Tanaman", "Hutan Mangrove", "Hutan Rawa"))
hutan <- sel_metrics2 %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove", "Hutan Rawa"))
g1 <- hutan %>% ggplot(aes(x = value, y = FRCI, color=LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable,
labeller = as_labeller(layer_names))
library(ggplot2)
g1 <- hutan %>% ggplot(aes(x = value, y = FRCI, color=LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable,
labeller = as_labeller(layer_names))
g1
names(hutan)
hutan <- bands %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove", "Hutan Rawa"))
g1 <- hutan %>% ggplot(aes(x = value, y = FRCI, color=LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variables,
labeller = as_labeller(layer_names))
g1
names(hutan)
g1 <- hutan %>% ggplot(aes(x = value, y = FRCI, color=LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable,
labeller = as_labeller(layer_names))
g1
hutan <- bands %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
g1 <- hutan %>% ggplot(aes(x = value, y = FRCI, color=LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable,
labeller = as_labeller(layer_names))
g1
# Tasseled Cap subset
tcap <- sel_metrics2 %>%
select(FRCI, TCA, TCD, TCB, TCG, TCW, b6, LClidar2) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
tchutan <- tcap %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
g2 <- tchutan %>% ggplot(aes(x = value, y = FCRC, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g2
g2 <- tchutan %>% ggplot(aes(x = value, y = FCRI, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g2
g2 <- tchutan %>% ggplot(aes(x = value, y = FRCI, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g2
nrow(sel_metrics2)
aaa<-c(1,2,4,3,3,2,5,6,,8,9,4,4,4,3,5,8,9,0)
aaa <- c(1,2,4,3,3,2,5,6,,8,9,4,4,4,3,5,8,9,0)
aaa <- c(1,2,4,3,3,2,5,6, 10,8,9,4,4,4,3,5,8,9,0)
aaa
b <- c(3,4,5)
aaa%in%b
# vegetation index subset
idx <- sel_metrics2 %>%
select(FRCI, NBR, NDVI, NDWI, SATVI, NDSI, LClidar2) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
idxhutan <- idx %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
g3 <- idxhutan %>% ggplot(aes(x = value, y = FRCI, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g3
txture <- sel_metrics2 %>%
select(FRCI, Tb4M, Tb5M, Tb6M, Tb7M, LClidar2) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
txthutan <- txture %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
txture <- sel_metrics2 %>%
select(FRCI, Tb4M, Tb5M, Tb6M, Tb7M, LClidar2) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
txthutan <- txture %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
g4 <- txthutan %>% ggplot(aes(x = value, y = FRCI, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g4
txture <- sel_metrics2 %>%
select(FRCI, LClidar2,
Tb4M, Tb5M, Tb6M, Tb7M,
Tb4V, Tb5V, Tb6V, Tb7V) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
txthutan <- txture %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
g4 <- txthutan %>% ggplot(aes(x = value, y = FRCI, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g4
# texture variance subset
txture <- sel_metrics2 %>%
select(FRCI, LClidar2,
Tb4V, Tb5V, Tb6V, Tb7V) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
txthutan <- txture %>%
filter(LClidar2 %in%
c("Hutan Tanaman", "Hutan Mangrove Primer", "Hutan Rawa"))
g5 <- txthutan %>% ggplot(aes(x = value, y = FRCI, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g5
intensity <- sel_metrics2 %>%
select(FRCI, LClidar2, ITY) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
intensity <- sel_metrics2 %>%
select(b4, ITY) %>%
st_drop_geometry %>%
melt(id.vars = c("FRCI", "LClidar2"))
intensity <- sel_metrics2 %>% select(b4, ITY) %>% st_drop_geometry
intensity <- sel_metrics2 %>% select(b4, ITY, LClidar2) %>% st_drop_geometry
g6 <- intensity %>% ggplot(aes(x = b4, y = ITY, color = LClidar2)) +
geom_point(alpha=0.2) + facet_wrap(~variable, labeller = as_labeller(layer_names))
g6
g6 <- intensity %>% ggplot(aes(x = b4, y = ITY, color = LClidar2)) +
geom_point(alpha=0.2)
g6
g6 <- intensity %>% ggplot(aes(x = b4, y = ITY)) +
geom_point(alpha=0.2)
g6
devtools::install_github("rstudio/kera")
devtools::install_github("rstudio/keras")
ls()
devtools::install_github("rstudio/keras")
install.packages("glue")
devtools::install_github("rstudio/keras")
install.pa
install.packages("processx")
install.packages("processx")
devtools::install_github("rstudio/keras")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github("rstudio/keras")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("rstudio/keras")
library(e1071)
sel_metrics2 <- read_sf("PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics2.shp")
library(sf)
sel_metrics2 <- read_sf("PROCESSED_DATA/FINAL_SEL_METRICS/sel_metrics2.shp")
names(sel_metrics2)
table(sel_metrics2$LClidar2)
library(dplyr)
library(magrittr)
library(reshape2)
library(ggplot2)
library(keras)
boston_housing <- dataset_boston_housing()
devtools::install_github("rstudio/tensorflow")
library(tensorflow)
install_tensorflow()
library(keras)
boston_housing <- dataset_boston_housing()
boston_housing
class(boston_housing)
c(train_data, train_labels) %<-% boston_housing$train
c(test_data, test_labels) %<-% boston_housing$test
paste0("Training entries: ", length(train_data), ", labels: ", length(train_labels))
train_data[1, ] # Display sample features, notice the different scales
nrow(sel_metrics2
)
table(sel_metrics2$LClidar2)
sel_metrics2 %>% filter(LClidar2 == 'Tanah Terbuka')
sel_metrics2 %>% filter(LClidar2 == 'Tanah Terbuka') %$% unique(tileID)
sel_metrics2 %>% filter(LClidar2 == 'Tanah Terbuka') %$% hist(FRCI)
library(tibble)
names(train_data)
train_data[1, ]
train_daya
train_data
library(tibble)
column_names <- c('CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE',
'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT')
train_df <- as_tibble(train_data)
library(tibble)
column_names <- c('CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE',
'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT')
train_df <- as_tibble(train_data)
colnames(train_df) <- column_names
train_df
train_labels[1:10] # Display first 10 entries
?%<-%
?%>%
library(magrittr)
library(magrittr)
?%>%
help("%>%")
help("%<-%")
boston_housing$train
train_labels
head(train_labels)
head(train_data)
# Normalize training data
train_data <- scale(train_data)
nrow(train_data)
# Use means and standard deviations from training set to normalize test set
col_means_train <- attr(train_data, "scaled:center")
col_stddevs_train <- attr(train_data, "scaled:scale")
test_data <- scale(test_data, center = col_means_train, scale = col_stddevs_train)
train_data[1, ] # First training sample, normalized
dim(train_data)[2]
dim(train_data)
?layer_dense
install_keras()
